#include<vector>
#include<iostream>
#include<cmath>
#include<climits>
#include<set>
#include<stdexcept>
#include<string>
#include<unordered_map>
using namespace std;

struct node
{
    int val;
    node* next;
    node(int val) : val(val), next(NULL) {}
};

node* findCycle(node* n)
{
    node* one = n;
    node* two = n;
    node* finder = n;
    if(n == NULL){return NULL;}
    if(n->next == NULL){return NULL;}
    one = one->next;
    two = two->next->next;
    while(two != NULL && two->next != NULL && one != two)
    {
        one = one->next;
        two = two->next->next;
    }
    if(two == NULL){return NULL;}
    if(two->next == NULL){return NULL;}
    if(one == two)
    {
        while(finder != one)
        {
            finder = finder->next;
            one = one->next;
        }
        return finder;
    }
    return NULL;
}


int main()
{
    node* n1 = new node(1);
    node* n2 = new node(2);
    node* n3 = new node(3);
    node* n4 = new node(4);
    node* n5 = new node(5);
    node* n6 = new node(6);
    n1->next = n2;
    n2->next = n3;
    n3->next = n4;
    n4->next = n5;
    n5->next = n6;
    n6->next = n3;
    
    cout << findCycle(n1)->val;
    return 0;
}
