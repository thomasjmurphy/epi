#include<vector>
#include<queue>
#include<iostream>
#include<cmath>
#include<climits>
#include<set>
#include<stdexcept>
#include<string>
#include<unordered_map>
#include<map>
#include"head.h"
#include<utility>

using namespace std;

class Stack
{
public:
    pair<int,int> arr[100];
    int top;
    Stack() : top(-1) {}
    void push(int a);
    void pop();
    bool isEmpty();
    int getMax();
    int getTop();
};

void Stack::push(int a)
{
    if(top >= 0)
    {
        top++;
        arr[top] = make_pair(a,max(a,arr[top-1].second));
    }
    if(top == -1)
    {
        top++;
        arr[top] = make_pair(a,a); 
    }
}

void Stack::pop()
{
    top--;
}

int Stack::getMax()
{
    if(top >= 0)
    {
        return arr[top].second;
    }
    abort();
}

int Stack::getTop()
{
    if(top >= 0)
    {
        return arr[top].first;
    }
    abort();
}
bool Stack::isEmpty()
{
    if(top == -1){return true;}
    return false;
}

int main()
{
    Stack s;
    s.push(1);
    s.push(3);
    s.push(4);
    s.push(2);
    
    cout << s.getMax();
    return 0;
}


