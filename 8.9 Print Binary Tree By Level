#include<vector>
#include<queue>
#include<iostream>
#include<cmath>
#include<climits>
#include<set>
#include<stdexcept>
#include<string>
#include<unordered_map>
#include<map>
#include"head.h"
#include<utility>

using namespace std;

struct tree
{
    int val;
    tree* left;
    tree* right;
    tree(int val) : val(val) {}
};

void print(tree* root)
{
    tree* temp = root;
    queue<tree*> q;
    q.push(root);
    while(!q.empty())
    {
        temp = q.front();
        cout << temp->val;
        if(temp->left){q.push(temp->left);}
        if(temp->right){q.push(temp->right);}
        q.pop();
    }
}


int main()
{   
    tree* t1 = new tree(1);
    tree* t2 = new tree(2);
    tree* t3 = new tree(3);
    tree* t4 = new tree(4);
    tree* t5 = new tree(5);
    tree* t6 = new tree(6);
    
    t1->left = t2;
    t2->left = t4;
    t3->left = t6;
    
    t1->right = t3;
    t2->right = t5;
    
    print(t1);
    
    
    
    
    return 0;
}


