#include<iostream>
#include<string>
#include<queue>
#include<utility>
#include<vector>
#include<tuple>


using namespace std;


double completion(vector<double>& vec, double S)
{
    int sum = 0;
    for(int i=0; i < vec.size(); i++)
    {
        sum+= vec[i];
    }
    sort(vec.begin(), vec.end());
    if(sum - S == 0){return vec[vec.size()-1];}
    int diff = 0;
    int count = 0;
    for(int i = vec.size()-1;i>=0;i--)
    {
        diff+= (vec.size()-i)*(vec[i] - vec[i-1]);
        cout << diff;
        count = vec.size()-i;
        cout << count << endl;
        if(diff >= sum - S){break;}
    }
    
    return vec[vec.size()-count-1] + (diff-(sum-S))/count;
}
